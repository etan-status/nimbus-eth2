# beacon_chain
# Copyright (c) 2021, 2022 Status Research & Development GmbH
# Licensed and distributed under either of
#   * MIT license (license terms in the root directory or at https://opensource.org/licenses/MIT).
#   * Apache v2 license (license terms in the root directory or at https://www.apache.org/licenses/LICENSE-2.0).
# at your option. This file may not be copied, modified, or distributed except according to those terms.

import std/math
import chronicles
import ../beacon_node,
       ./rest_utils

logScope: topics = "rest_light_client"

proc installLightClientApiHandlers*(router: var RestRouter, node: BeaconNode) =
  let altairStartSlot =
    compute_start_slot_at_epoch(node.dag.cfg.ALTAIR_FORK_EPOCH)

  # https://github.com/ChainSafe/lodestar/blob/v0.32.0/packages/api/src/routes/lightclient.ts#L38
  router.api(MethodGet,
             "/eth/v1/lightclient/best_updates") do (
    `from`, to: Option[SyncCommitteePeriod]) -> RestApiResponse:
    let vfrom = block:
      if `from`.isNone():
        return RestApiResponse.jsonError(Http400, MissingFromValueError)
      let rfrom = `from`.get()
      if rfrom.isErr():
        return RestApiResponse.jsonError(Http400, InvalidSyncPeriodError,
                                         $rfrom.error())
      rfrom.get()
    let vto = block:
      if to.isNone():
        return RestApiResponse.jsonError(Http400, MissingToValueError)
      let rto = to.get()
      if rto.isErr():
        return RestApiResponse.jsonError(Http400, InvalidSyncPeriodError,
                                         $rto.error())
      rto.get()
    let
      minPeriod = vfrom
      maxPeriod = min(vto, node.dag.head.slot.sync_committee_period)
    if maxPeriod < minPeriod:
      return RestApiResponse.jsonResponse(newSeq[LightClientUpdate](0))

    let startTick = Moment.now()
    const maxPeriodsPerRequest = 128
    let numPeriods = maxPeriod - minPeriod + 1
    var updates = newSeqOfCap[LightClientUpdate](numPeriods)
    for period in minPeriod .. maxPeriod:
      let update = node.dag.getBestLightClientUpdateForPeriod(period)
      if update.isSome:
        updates.add update.get
        if updates.len >= maxPeriodsPerRequest:
          break
      if Moment.now() - startTick > 10.seconds:
        break
    return RestApiResponse.jsonResponse(updates)

  # https://github.com/ChainSafe/lodestar/blob/v0.32.0/packages/api/src/routes/lightclient.ts#L39
  router.api(MethodGet,
             "/eth/v1/lightclient/latest_update_finalized") do (
    ) -> RestApiResponse:
    let update = node.dag.getLatestFinalizedLightClientUpdate()
    if update.isNone:
      return RestApiResponse.jsonError(Http404, LightClientUpdateUnavailable)
    return RestApiResponse.jsonResponse(update.get)

  # https://github.com/ChainSafe/lodestar/blob/v0.32.0/packages/api/src/routes/lightclient.ts#L40
  router.api(MethodGet,
             "/eth/v1/lightclient/latest_update_nonfinalized") do (
    ) -> RestApiResponse:
    let update = node.dag.getLatestNonFinalizedLightClientUpdate()
    if update.isNone:
      return RestApiResponse.jsonError(Http404, LightClientUpdateUnavailable)
    return RestApiResponse.jsonResponse(update.get)

  # https://github.com/ChainSafe/lodestar/blob/v0.32.0/packages/api/src/routes/lightclient.ts#L41
  router.api(MethodGet,
             "/eth/v1/lightclient/init_proof/{block_root}") do (
    block_root: Eth2Digest) -> RestApiResponse:
    let vroot = block:
      if block_root.isErr():
        return RestApiResponse.jsonError(Http400, InvalidBlockRootValueError,
                                         $block_root.error())
      block_root.get()
    let blockRef = node.dag.getRef(vroot)
    if blockRef == nil or
        blockRef.slot > node.dag.finalizedHead.slot or
        blockRef.slot < altairStartSlot:
      return RestApiResponse.jsonError(Http404,
                                       LightClientInitProofUnavailable)
    node.withStateForBlockSlot(blockRef.atSlot(blockRef.slot)):
      withState(stateData.data):
        when stateFork >= BeaconStateFork.Altair:
          # For interoperability purposes we choose to send this in the format
          # that the Lodestar light client demo expects.
          # https://github.com/ChainSafe/eth2-light-client-demo/tree/dapplion/update-to-prater
          #
          #                                 .
          #                 .                               .
          #         .               *               .               *
          #     .       *       .       .       *       .       .       .
          #   .   *   .   .   .   .   .   .   .   .   *   .   .   .   .   .
          #  T V . . . . . . . . . . . . . . . . . . . . C N . . . . . . . .
          #
          #  T - genesis_time                C - current_sync_committee
          #  V - genesis_validators_root     N - next_sync_committee
          #  * - Merkle multiproof node
          #
          # Differences between Lodestar and EF merkle multiproof:
          # - Lodestar combines leaf and proof chunks into a single structure.
          #   EF sends leaves separately from the proof chunks.
          # - Lodestar sends chunks for indices in depth-first order (in-order).
          #   EF sends proof chunks in descending order of generalized index.
          # - Lodestar pads leaves to 32-byte chunks (e.g., `ValidatorPubKey`).
          #   EF allows sending leaves in a compactly packed format.
          # - Lodestar sends additional constant metadata in form of offsets.
          #   EF does not send redundant metadata.
          # https://github.com/ethereum/consensus-specs/blob/v1.1.3/ssz/merkle-proofs.md#merkle-multiproofs
          # https://github.com/protolambda/eth-merkle-trees/blob/master/tree_offsets.md
          #
          # Depth-first order (in-order) of relevant generalized indices:
          #  32 - genesis_time
          #  33 - genesis_validators_root
          #  17 - (merkle proof)
          #   9 - (merkle proof)
          #   5 - (merkle proof)
          #  12 - (merkle proof)
          #  26 - (merkle proof)
          #  54 - current_sync_committee
          #  55 - next_sync_committee
          #   7 - (merkle proof)
          static:
            doAssert GENESIS_TIME_INDEX == 32.GeneralizedIndex
            doAssert GENESIS_VALIDATORS_ROOT_INDEX == 33.GeneralizedIndex
            doAssert CURRENT_SYNC_COMMITTEE_INDEX == 54.GeneralizedIndex
            doAssert NEXT_SYNC_COMMITTEE_INDEX == 55.GeneralizedIndex

            doAssert SYNC_COMMITTEE_SIZE.isPowerOfTwo # No extra proof needed

            doAssert sizeof(ValidatorPubKey)  > 1 * sizeof(Eth2Digest)
            doAssert sizeof(ValidatorPubKey) <= 2 * sizeof(Eth2Digest)
          const
            stateProofIndices = [
              17.GeneralizedIndex,
              9.GeneralizedIndex,
              5.GeneralizedIndex,
              12.GeneralizedIndex,
              26.GeneralizedIndex,
              7.GeneralizedIndex
            ]
            numSyncCommitteeChunks =      # 2 roots per ValidatorPubKey
              #[                 pubkeys ]# 2 * SYNC_COMMITTEE_SIZE +
              #[        aggregate_pubkey ]# 2
            numChunks =
              #[            merkle proof ]# stateProofIndices.len +
              #[            genesis_time ]# 1 +
              #[ genesis_validators_root ]# 1 +
              #[  current_sync_committee ]# numSyncCommitteeChunks +
              #[     next_sync_committee ]# numSyncCommitteeChunks

          # Lodestar-specific prefix is constant.
          static:
            doAssert SYNC_COMMITTEE_SIZE == 512
          const
            prefix = [
              0x01.byte, # Magic, followed by offsets count and offsets.
              0x0c, 0x08, 0x05, 0x00, 0x04, 0x00, 0x03, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x06, 0x08, 0x01, 0x00, 0x01, 0x00, 0x02, 0x04,
              0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x80, 0x00, 0x40, 0x00,
              0x20, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x20, 0x00, 0x10, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x40, 0x00, 0x20, 0x00, 0x10, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x20, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x80, 0x00, 0x40, 0x00,
              0x20, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x20, 0x00, 0x10, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x40, 0x00, 0x20, 0x00, 0x10, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x20, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x01, 0x80, 0x00,
              0x40, 0x00, 0x20, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x20, 0x00,
              0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x40, 0x00, 0x20, 0x00, 0x10, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x20, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x80, 0x00,
              0x40, 0x00, 0x20, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x20, 0x00,
              0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x40, 0x00, 0x20, 0x00, 0x10, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x20, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x80, 0x00, 0x40, 0x00,
              0x20, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x20, 0x00, 0x10, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x40, 0x00, 0x20, 0x00, 0x10, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x20, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x80, 0x00, 0x40, 0x00,
              0x20, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x20, 0x00, 0x10, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x40, 0x00, 0x20, 0x00, 0x10, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x20, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x01, 0x80, 0x00,
              0x40, 0x00, 0x20, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x20, 0x00,
              0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x40, 0x00, 0x20, 0x00, 0x10, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x20, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x80, 0x00,
              0x40, 0x00, 0x20, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x20, 0x00,
              0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x40, 0x00, 0x20, 0x00, 0x10, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x10, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x08, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x20, 0x00, 0x10, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x04, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00,
              0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00,
              0x04, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
              0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x01, 0x00,
              0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00,
            ]

          template addRoot(root: Eth2Digest) =
            res[o ..< o + sizeof(root)] = root.data
            inc o, sizeof(Eth2Digest)

          template addPubkey(pubkey: ValidatorPubKey) =
            res[o ..< o + sizeof(pubkey)] = pubkey.blob
            inc o, 2 * sizeof(Eth2Digest)

          template addSyncCommittee(sync_committee: SyncCommittee) =
            for pubkey in sync_committee.pubkeys:
              addPubkey pubkey
            addPubkey sync_committee.aggregate_pubkey

          let stateProof = hash_tree_root(state.data, stateProofIndices).get
          var res = newSeq[byte](prefix.len + numChunks * sizeof(Eth2Digest))
          res[0 ..< prefix.len] = prefix
          var o = prefix.len
          addRoot hash_tree_root(state.data.genesis_time)
          addRoot hash_tree_root(state.data.genesis_validators_root)
          addRoot stateProof[0]
          addRoot stateProof[1]
          addRoot stateProof[2]
          addRoot stateProof[3]
          addRoot stateProof[4]
          addSyncCommittee state.data.current_sync_committee
          addSyncCommittee state.data.next_sync_committee
          addRoot stateProof[5]
          doAssert o == res.len

          return RestApiResponse.response(res, Http200,
                                          "application/octet-stream")
        else:
          return RestApiResponse.jsonError(Http500, InternalServerError,
                                           "Unexpected state fork")
    return RestApiResponse.jsonError(Http500, InternalServerError,
                                     "Block retrieval failed")
